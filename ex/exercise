In this exercise you will achieve for code execution on up to date x86 processor.
You will need to bypass ASLR, DEP and stack canary mitigations.


1.  Compile the executable using "make debug"
2.  Run the program and make sure you can attach with gdb
3.  Find a way to leak data from the stack (read primitive)
4.  Find a way to achieve oob in the stack (write primitive)
5.  Create a file that crash the program, why did the program crashed? 
6.  What can you do in order to by pass the previous error?
7.  Create a file that crash the program on specific EIP address
8.  Create a ROP chain which creates a RWX page in the memory with your controlled data
9.  Create a file that jumps to your ROP chain.
10. Create a file that triggers the ROP an in the end the EIP points to a RWX page with your controlled data.
11. Create a python script that dose the exploitation of the program on the original file_hack binary which attached 
